//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://www.freesql.net
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Threading.Tasks;
using Newtonsoft.Json;
using FreeSql.DataAnnotations;

namespace Shop.EntityModel {

	[JsonObject(MemberSerialization.OptIn)]
	public partial class SalesOrderDetail {

		[JsonProperty]
		public bool? AdvancePound { get; set; }

		[JsonProperty]
		public bool? AdvanceWeight { get; set; }

		[JsonProperty]
		public bool? AgingTemperature { get; set; }

		[JsonProperty]
		public int? AllowFewerQty { get; set; }

		[JsonProperty]
		public int? AllowOverQty { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? Assessment { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? AssessmentWeight { get; set; }

		[JsonProperty, Column(IsIdentity = true)]
		public long AutoID { get; set; }

		[JsonProperty]
		public int? AvailableMouldCount { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(50)")]
		public string BillingCategory { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(38,2)")]
		public decimal? BootCharge { get; set; }

		[JsonProperty]
		public int? Bundle { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string ChangeReason { get; set; } = string.Empty;

		[JsonProperty]
		public DateTime? CloseDate { get; set; }

		[JsonProperty, Column(DbType = "varchar(50)")]
		public string CloseUser { get; set; } = string.Empty;

		[JsonProperty]
		public Guid? CombinationListFileDetailID { get; set; }

		[JsonProperty]
		public Guid? CombinationListFileID { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,2)")]
		public decimal? CostCharge { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string Currency { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string CustomerBillCodeDetail { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(50)")]
		public string CustomerCode { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "date")]
		public DateTime? CustomerDeliveryPeriod { get; set; }

		[JsonProperty, Column(DbType = "varchar(100)")]
		public string CustomerProductName { get; set; } = string.Empty;

		[JsonProperty]
		public Guid? CustomerSurfaceFileID { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(50)")]
		public string CustomizedMouldSpec { get; set; } = string.Empty;

		[JsonProperty]
		public Guid? DeepProductionLineFileID { get; set; }

		[JsonProperty]
		public Guid? DeepProductionProcessNameID { get; set; }

		[JsonProperty, Column(DbType = "varchar(100)")]
		public string DetailCustomerPO { get; set; } = string.Empty;

		[JsonProperty]
		public long? Dosage { get; set; }

		[JsonProperty, Column(DbType = "varchar(10)")]
		public string ElectricPole { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(200)")]
		public string ExtrudingMachineName { get; set; } = string.Empty;

		[JsonProperty]
		public DateTime? ExtrusionEndDate { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(50)")]
		public string ExtrusionEndOper { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(50)")]
		public string FilmThickness { get; set; } = string.Empty;

		[JsonProperty]
		public DateTime? FinishDate { get; set; }

		[JsonProperty]
		public Guid? FinishedProductWareHouseID { get; set; }

		[JsonProperty, Column(DbType = "varchar(30)")]
		public string FinishOper { get; set; } = string.Empty;

		[JsonProperty]
		public Guid? FluorocarbonProductionLineFileID { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(50)")]
		public string Hardness { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(200)")]
		public string HeatInsulationList { get; set; } = string.Empty;

		[JsonProperty]
		public Guid? HeatInsulationProductionLineFileID { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(200)")]
		public string HeatInsulationSurface { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(200)")]
		public string HeatInsulationSurfaceCategory { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(38,4)")]
		public decimal? HeatLength { get; set; }

		[JsonProperty]
		public Guid ID { get; set; }

		[JsonProperty, Column(Name = "ifinvoice")]
		public bool? Ifinvoice { get; set; }

		[JsonProperty, Column(Name = "ifmax")]
		public bool? Ifmax { get; set; }

		[JsonProperty]
		public Guid? InID { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(50)")]
		public string InsulationStripManufacturers { get; set; } = string.Empty;

		[JsonProperty]
		public bool? IsAdd { get; set; }

		[JsonProperty]
		public bool? IsAutoFinish { get; set; }

		[JsonProperty]
		public bool? IsOrderCancel { get; set; }

		[JsonProperty]
		public bool? IsOrderSuspend { get; set; }

		[JsonProperty]
		public bool? IsOutsourcing { get; set; }

		[JsonProperty]
		public bool? IsProcessingTrade { get; set; }

		[JsonProperty]
		public bool? IsUsed { get; set; }

		[JsonProperty]
		public Guid? LabelDefinitionID { get; set; }

		[JsonProperty]
		public int? LimitedProductionQuantity { get; set; }

		[JsonProperty]
		public Guid MainID { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,6)")]
		public decimal? MechanicalProcessingCharge { get; set; }

		[JsonProperty, Column(Name = "memo1", DbType = "varchar(255)")]
		public string Memo1 { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "memo10", DbType = "varchar(255)")]
		public string Memo10 { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "memo2", DbType = "varchar(255)")]
		public string Memo2 { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "memo3", DbType = "varchar(255)")]
		public string Memo3 { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "memo4", DbType = "varchar(255)")]
		public string Memo4 { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "memo5", DbType = "varchar(255)")]
		public string Memo5 { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "memo6", DbType = "varchar(255)")]
		public string Memo6 { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "memo7", DbType = "varchar(255)")]
		public string Memo7 { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "memo8", DbType = "varchar(255)")]
		public string Memo8 { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "memo9", DbType = "varchar(255)")]
		public string Memo9 { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(38,2)")]
		public decimal? Money { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,8)")]
		public decimal? Money_USA { get; set; }

		[JsonProperty]
		public int? MouldDiameter { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(50)")]
		public string MouldSpec { get; set; } = string.Empty;

		[JsonProperty]
		public string MouldSpecs { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(38,6)")]
		public decimal? NearEstimatedLength { get; set; }

		[JsonProperty]
		public bool? NeedDeepProductionProcess { get; set; }

		[JsonProperty, Column(Name = "number1", DbType = "decimal(38,3)")]
		public decimal? Number1 { get; set; }

		[JsonProperty, Column(Name = "number2", DbType = "decimal(38,3)")]
		public decimal? Number2 { get; set; }

		[JsonProperty, Column(Name = "number3", DbType = "decimal(38,3)")]
		public decimal? Number3 { get; set; }

		[JsonProperty, Column(Name = "number4", DbType = "decimal(38,3)")]
		public decimal? Number4 { get; set; }

		[JsonProperty, Column(Name = "number5", DbType = "decimal(38,3)")]
		public decimal? Number5 { get; set; }

		[JsonProperty, Column(Name = "number6", DbType = "decimal(38,6)")]
		public decimal? Number6 { get; set; }

		[JsonProperty, Column(Name = "number7", DbType = "decimal(38,6)")]
		public decimal? Number7 { get; set; }

		[JsonProperty, Column(Name = "number8", DbType = "decimal(38,6)")]
		public decimal? Number8 { get; set; }

		[JsonProperty]
		public int? OldInventoryUtilization { get; set; }

		[JsonProperty, Column(DbType = "varchar(30)")]
		public string OrderLength { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(50)")]
		public string OrderLevel { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(255)")]
		public string OrderNumberLineItem { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? OrderWeight { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string OutRubberStrip { get; set; } = string.Empty;

		[JsonProperty]
		public Guid? OxidationProductionLineFileID { get; set; }

		[JsonProperty]
		public Guid? PackingID { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? PackingnPrice { get; set; }

		[JsonProperty]
		public Guid? PackingProductionLineFileID { get; set; }

		[JsonProperty, Column(DbType = "varchar(10)")]
		public string PageNumber { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string PaperSize { get; set; } = string.Empty;

		[JsonProperty]
		public string PartitionList { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(38,4)")]
		public decimal? Perimeter { get; set; }

		[JsonProperty]
		public bool? PlasticInjection { get; set; }

		[JsonProperty]
		public string PostProcess { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(38,6)")]
		public decimal? Price { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,8)")]
		public decimal? Price_USA { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,6)")]
		public decimal? PriceTimes { get; set; }

		[JsonProperty, Column(DbType = "varchar(50)")]
		public string PriceType { get; set; } = string.Empty;

		[JsonProperty]
		public Guid? PrimaryMachineDataID { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,2)")]
		public decimal? ProcessingCharge { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,8)")]
		public decimal? ProcessingCharge_USA { get; set; }

		[JsonProperty, Column(DbType = "varchar(50)")]
		public string ProductCategory { get; set; } = string.Empty;

		[JsonProperty]
		public Guid? ProductID { get; set; }

		[JsonProperty]
		public Guid? ProductionCraftID { get; set; }

		[JsonProperty, Column(DbType = "date")]
		public DateTime? ProductionDate { get; set; }

		[JsonProperty]
		public DateTime? ProductionEndDate { get; set; }

		[JsonProperty, Column(DbType = "varchar(50)")]
		public string ProductionEndOper { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(38,4)")]
		public decimal? ProductionLength { get; set; }

		[JsonProperty, Column(DbType = "varchar(255)")]
		public string ProductionMode { get; set; } = string.Empty;

		[JsonProperty]
		public int? ProductionQuantity { get; set; }

		[JsonProperty]
		public int? QuantityEveryBundle { get; set; }

		[JsonProperty, Column(DbType = "varchar(500)")]
		public string Remark { get; set; } = string.Empty;

		[JsonProperty]
		public override int RowNo { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string RubberStrip { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(30)")]
		public string SalesOrderTraceCode { get; set; } = string.Empty;

		[JsonProperty]
		public int? ScatterQuantity { get; set; }

		[JsonProperty]
		public Guid? SectionBarID { get; set; }

		[JsonProperty]
		public int? SerialNumber { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,6)")]
		public decimal? Singlearea { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,4)")]
		public decimal? SinglePrice { get; set; }

		[JsonProperty, Column(DbType = "varchar(50)")]
		public string Sort { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(500)")]
		public string SpecialRequirementsRemark { get; set; } = string.Empty;

		[JsonProperty]
		public string SprayPowderCode { get; set; } = string.Empty;

		[JsonProperty]
		public Guid? SprayProductionLineFileID { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? SurfaceArea { get; set; }

		[JsonProperty]
		public Guid? SurfaceID { get; set; }

		[JsonProperty]
		public Guid? SurfaceID1 { get; set; }

		[JsonProperty]
		public Guid? TextureID { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? Theory6Meter { get; set; }

		[JsonProperty, Column(DbType = "varchar(30)")]
		public string Theory6MeterRange { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(38,6)")]
		public decimal? TheoryArea { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? TheoryMeter { get; set; }

		[JsonProperty, Column(Name = "theorysupporting", DbType = "decimal(38,3)")]
		public decimal? Theorysupporting { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? TheoryWeight { get; set; }

		[JsonProperty]
		public int? Times { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,6)")]
		public decimal? TotalPackingSectionArea { get; set; }

		[JsonProperty]
		public int? TotalQuantity { get; set; }

		[JsonProperty, Column(DbType = "varchar(50)")]
		public string WallThickness { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(50)")]
		public string WallThicknessLowerLimit { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(50)")]
		public string WallThicknessUpperLimit { get; set; } = string.Empty;

		[JsonProperty]
		public Guid? WebOrderDetailID { get; set; }

		[JsonProperty]
		public string WithTax { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string WoodGrainPaperNo { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(50)")]
		public string WoodPaperLength { get; set; } = string.Empty;

		[JsonProperty]
		public Guid? WoodProductionLineFileID { get; set; }

	}

}
