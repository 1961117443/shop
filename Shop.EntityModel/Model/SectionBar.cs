//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://www.freesql.net
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Threading.Tasks;
using Newtonsoft.Json;
using FreeSql.DataAnnotations;

namespace Shop.EntityModel {

	[JsonObject(MemberSerialization.OptIn)]
	public partial class SectionBar {

		[JsonProperty]
		public bool? Abroad { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? AbroadDecimal { get; set; }

		[JsonProperty]
		public bool? AllowSpraying { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? AluDensity { get; set; }

		[JsonProperty]
		public int? Amout { get; set; }

		[JsonProperty, Column(IsIdentity = true)]
		public long AutoID { get; set; }

		[JsonProperty]
		public int? AvailableMouldCount { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,8)")]
		public decimal? BaseArea { get; set; }

		[JsonProperty, Column(DbType = "varchar(50)")]
		public string BillType { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? Circumcircle { get; set; }

		[JsonProperty]
		public DateTime? CloseDate { get; set; }

		[JsonProperty, Column(DbType = "varchar(50)")]
		public string CloseUser { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string Code { get; set; } = string.Empty;

		[JsonProperty, Column(Name = "complexmethod", DbType = "varchar(255)")]
		public string Complexmethod { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? ControlMeterWeight { get; set; }

		[JsonProperty, Column(DbType = "varchar(50)")]
		public string CustomerCode { get; set; } = string.Empty;

		[JsonProperty]
		public Guid? CustomerID { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? CutAluMeter { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? CutAluSectionalArea { get; set; }

        [JsonProperty, Column(DbType = "image")]
        public byte[] Diagram { get; set; }

        [JsonProperty, Column(DbType = "date")]
        public DateTime? DrawingDate { get; set; }

		[JsonProperty, Column(DbType = "varchar(100)")]
		public string DrawingModel { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(38,4)")]
		public decimal? ExcessMaterialLength { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string ExtrusionModel { get; set; } = string.Empty;

		[JsonProperty]
		public Guid? ExtrusionModelID { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? Fluorocarbonarea { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,4)")]
		public decimal? HeadTailLength { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,2)")]
		public decimal? HighTemperaturePaperWidth { get; set; }

		[JsonProperty]
		public Guid ID { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? InjectionDensity { get; set; }

		[JsonProperty]
		public bool? Internal { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? InternalDecimal { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,8)")]
		public decimal? Interval { get; set; }

		[JsonProperty]
		public bool? IsOutSide { get; set; }

		[JsonProperty]
		public bool? IsStop { get; set; }

		[JsonProperty]
		public Guid? LastExtrudingMachineID { get; set; }

		[JsonProperty]
		public Guid? LastMachineDataID { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? Length { get; set; }

		[JsonProperty]
		public Guid? MachineDataID { get; set; }

		[JsonProperty]
		public Guid? MachineDataID1 { get; set; }

		[JsonProperty]
		public Guid? MachineDataID3 { get; set; }

		[JsonProperty]
		public Guid? MachineID { get; set; }

		[JsonProperty]
		public Guid? MachineID1 { get; set; }

		[JsonProperty]
		public DateTime? MakeDate { get; set; }

		[JsonProperty, Column(DbType = "varchar(30)")]
		public string Maker { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(38,8)")]
		public decimal? MaxBearing { get; set; }

		[JsonProperty, Column(DbType = "varchar(30)")]
		public string Mender { get; set; } = string.Empty;

		[JsonProperty]
		public DateTime? ModifyDate { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? MoldRiceWeight { get; set; }

		[JsonProperty]
		public Guid? MouldSetLastMachineDataID { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string Name { get; set; } = string.Empty;

		[JsonProperty]
		public Guid? NotchCodeID { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? OutPutSpeed { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,2)")]
		public decimal? OverRate { get; set; }

		[JsonProperty, Column(DbType = "image")]
		public byte[] PackingPicture { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,4)")]
		public decimal? Perimeter { get; set; }

		[JsonProperty]
		public bool? PlasticInjection { get; set; }

		[JsonProperty]
		public Guid? PlasticInjectionBeforeCodeID { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? PlasticInjectionMeter { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? PlasticInjectionSectionArea { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string PriceCategory { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(38,2)")]
		public decimal? PrimaryVenner { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(500)")]
		public string Remark { get; set; } = string.Empty;

		[JsonProperty]
		public int RowNo { get; set; }

		[JsonProperty]
		public int? SafeQuantity { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,4)")]
		public decimal? SectionalArea { get; set; }

		[JsonProperty]
		public int? SectionalAreaMM { get; set; }

		[JsonProperty]
		public Guid? SectionBarCategoryID { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(50)")]
		public string SectionBarPurpose { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(38,4)")]
		public decimal? SectionLength { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? SectionParameters { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,4)")]
		public decimal? SectionWidth { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? Singlearea { get; set; }

		[JsonProperty, Column(DbType = "varchar(255)")]
		public string Sort { get; set; } = string.Empty;

		[JsonProperty]
		public DateTime? StopDate { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(30)")]
		public string StopOper { get; set; } = string.Empty;

		[JsonProperty]
		public int? StoreMax { get; set; }

		[JsonProperty]
		public int? StoreMin { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,2)")]
		public decimal? SupportTolerance { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? TearingOpening { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(50)")]
		public string TearingType { get; set; } = string.Empty;

		[JsonProperty]
		public Guid? TextureID { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? Theoreticalweight { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? TheoryMeterBeforeTearing { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? TheoryMeterLowerLimit { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,3)")]
		public decimal? TheoryMeterUpperLimit { get; set; }

		[JsonProperty, Column(Name = "theorysupporting", DbType = "decimal(38,3)")]
		public decimal? Theorysupporting { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,2)")]
		public decimal? TransferPaperWidth { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,2)")]
		public decimal? Venner { get; set; }

		[JsonProperty, Column(DbType = "decimal(38,2)")]
		public decimal? Walltheorysupporting { get; set; }

		[JsonProperty, Column(DbType = "varchar(50)")]
		public string WallThickness { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(30)")]
		public string WallThicknessdistinguish { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(50)")]
		public string WallThicknessLowerLimit { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(50)")]
		public string WallThicknessUpperLimit { get; set; } = string.Empty;

	}

}
